<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxx.mapper.ExportMapper" >

  <select id="selectOutAll" resultType="com.jxx.excel.OutExport">
    SELECT
    (CASE A.OPERATE_TYPE
    WHEN 2 THEN
    SA.SALEORDER_NO
    WHEN 4 THEN
    ASS.AFTER_SALES_NO
    WHEN 6 THEN
    ASS.AFTER_SALES_NO
    WHEN 7 THEN
    ASS.AFTER_SALES_NO
    WHEN 10 THEN
    OO.order_no
    WHEN 13 THEN
    OO.order_no
    WHEN 14 THEN
    OO.order_no
    ELSE ''
    END) AS '单号',
    CASE A.OPERATE_TYPE
    WHEN 1 THEN '采购入库'
    WHEN 2 THEN '销售出库'
    WHEN 3 THEN '销售换货入库'
    WHEN 4 THEN '销售换货出库'
    WHEN 5 THEN '销售退货入库'
    WHEN 6 THEN '采购退货出库'
    WHEN 7 THEN '采购换货出库'
    WHEN 8 THEN '采购换货入库'
    WHEN 9 THEN '外借入库'
    WHEN 10 THEN '外借出库'
    WHEN 11 THEN '调整盘盈入库'
    WHEN 12 THEN '盘盈入库'
    WHEN 13 THEN '报废出库'
    WHEN 14 THEN '领用出库'
    ELSE ''
    END  AS  '单据类型',
    CASE
    WHEN SA.STATUS = 1 THEN
    '进行中'
    WHEN SA.STATUS = 2 THEN
    '已完结'
    WHEN SA.STATUS = 3 THEN
    '已关闭' ELSE '待确认'
    END '订单状态',

    CASE SA.DELIVERY_DIRECT
    WHEN 1 THEN '是'
    WHEN 0 THEN '否'
    ELSE ''
    END AS '是否直发',
    FROM_UNIXTIME(
    IF
    (
    SA.ADD_TIME = 0,
    NULL,
    SA.ADD_TIME
    ) / 1000,
    '%Y-%m-%d'
    ) AS '创建时间',
    FROM_UNIXTIME(
    IF
    (
    SA.VALID_TIME = 0,
    NULL,
    SA.VALID_TIME
    ) / 1000,
    '%Y-%m-%d'
    ) AS '生效时间',
    CASE A.OPERATE_TYPE
    WHEN 2 THEN SA.TRADER_NAME
    WHEN 10 THEN	IF(L.TRADER_NAME IS NOT NULL,L.TRADER_NAME,OO.borrow_trader_name)
    ELSE '' END
    AS'客户名称',
    SA.TRADER_ID '客户ID',
    OOO.TITLE '客户等级',
    CASE
    WHEN CC.CUSTOMER_TYPE = 426 THEN
    '科研医疗'
    WHEN CC.CUSTOMER_TYPE = 427 THEN
    '临床医疗' ELSE ''
    END AS '客户类别',
    CASE
    WHEN CC.CUSTOMER_NATURE = 465 THEN
    '分销'
    WHEN CC.CUSTOMER_NATURE = 466 THEN
    '终端' ELSE ''
    END AS '客户性质',
    (
    SELECT
    F.ORG_NAME
    FROM
    T_R_USER_POSIT D
    LEFT JOIN T_POSITION E ON D.POSITION_ID = E.POSITION_ID
    LEFT JOIN T_ORGANIZATION F ON E.ORG_ID = F.ORG_ID
    WHERE
    D.USER_ID = ccc.USER_ID
    LIMIT 1
    ) AS '归属部门',
    e.TITLE '发票类型',
    IFNULL(
    R3.REGION_NAME,
    IFNULL( R2.REGION_NAME, R1.REGION_NAME )) '客户归属省',
    AB.SHOW_NAME 商品名称,
    AB.SKU_NO SKU,
    BRA.BRAND_NAME 品牌,
    AB.MODEL '规格',
    UN.UNIT_NAME 计量单位,
    CB.BASE_CATEGORY_NAME '三级分类',
    DB.BASE_CATEGORY_NAME '二级分类',
    EB.BASE_CATEGORY_NAME  '一级分类',
    TC3.CATEGORY_NAME AS '老三级分类',
    TC2.CATEGORY_NAME AS '老二级分类',
    TC.CATEGORY_NAME AS '老一级分类',
    BR.BARCODE '贝登条码',
    A.BARCODE_FACTORY '厂商条码',
    ABS(A.NUM) '数量',
    A.NEW_COST_PRICE '单价',
    ABS(A.NUM) * A.NEW_COST_PRICE '出库金额',
    A.BATCH_NUMBER 批次,
    FROM_UNIXTIME( A.ADD_TIME / 1000, '%Y-%m-%d' ) AS '出库时间'
    FROM
    T_WAREHOUSE_GOODS_OPERATE_LOG A
    LEFT JOIN T_SALEORDER_GOODS SG ON SG.SALEORDER_GOODS_ID=A.RELATED_ID AND A.OPERATE_TYPE=2
    LEFT JOIN T_SALEORDER SA ON SG.SALEORDER_ID=SA.SALEORDER_ID  -- SA 取直发状态
    LEFT JOIN T_AFTER_SALES_GOODS ASG ON ASG.AFTER_SALES_GOODS_ID=A.RELATED_ID AND A.OPERATE_TYPE IN (4,6,7)
    LEFT JOIN T_AFTER_SALES ASS ON ASG.AFTER_SALES_ID=ASS.AFTER_SALES_ID
    LEFT JOIN T_AFTER_SALES_DETAIL ASD ON ASG.AFTER_SALES_ID=ASD.AFTER_SALES_ID
    LEFT JOIN T_TRADER T ON ASD.TRADER_ID=T.TRADER_ID
    LEFT JOIN T_WMS_OUTPUT_ORDER_GOODS OOG ON OOG.id=A.RELATED_ID AND A.OPERATE_TYPE IN (10,13,14)
    LEFT JOIN T_WMS_OUTPUT_ORDER OO ON OO.id=OOG.wms_output_order_id
    LEFT JOIN T_LEND_OUT L ON A.RELATED_ID = L.LEND_OUT_ID  AND A.OPERATE_TYPE = 10
    LEFT JOIN T_BARCODE BR ON BR.BARCODE_ID = A.BARCODE_ID
    LEFT JOIN V_CORE_SKU AB ON AB.SKU_ID = A.GOODS_ID
    LEFT JOIN V_CORE_SPU BB ON AB.SPU_ID = BB.SPU_ID
    LEFT JOIN V_BASE_CATEGORY CB ON BB.CATEGORY_ID = CB.BASE_CATEGORY_ID
    LEFT JOIN V_BASE_CATEGORY DB ON CB.PARENT_ID = DB.BASE_CATEGORY_ID
    LEFT JOIN V_BASE_CATEGORY EB ON DB.PARENT_ID = EB.BASE_CATEGORY_ID
    LEFT JOIN T_FIRST_ENGAGE FI ON BB.FIRST_ENGAGE_ID=FI.FIRST_ENGAGE_ID
    LEFT JOIN T_GOODS goods on goods.GOODS_ID=A.GOODS_ID
    LEFT JOIN T_CATEGORY TC ON TC.CATEGORY_ID=goods.CATEGORY_ID AND TC.STATUS=1
    LEFT JOIN T_CATEGORY TC2 ON TC2.CATEGORY_ID=TC.PARENT_ID AND TC2.STATUS=1
    LEFT JOIN T_CATEGORY TC3 ON TC3.CATEGORY_ID=TC2.CATEGORY_ID AND TC3.STATUS=1
    LEFT JOIN T_BRAND BRA ON BRA.BRAND_ID = BB.BRAND_ID
    LEFT JOIN T_UNIT UN ON UN.UNIT_ID=AB.BASE_UNIT_ID
    LEFT JOIN T_R_TRADER_J_USER bbb ON SA.TRADER_ID = bbb.TRADER_ID
    LEFT JOIN T_USER ccc ON bbb.USER_ID = ccc.USER_ID
    LEFT JOIN T_USER CR ON CR.USER_ID = SA.CREATOR
    LEFT JOIN T_SALEORDER_GOODS b ON SA.SALEORDER_ID = b.SALEORDER_ID
    AND b.IS_DELETE = 0
    LEFT JOIN T_SYS_OPTION_DEFINITION d ON d.SYS_OPTION_DEFINITION_ID = SA.DELIVERY_TYPE
    LEFT JOIN T_SYS_OPTION_DEFINITION e ON e.SYS_OPTION_DEFINITION_ID = SA.INVOICE_TYPE
    LEFT JOIN T_TRADER TRA ON TRA.TRADER_ID = SA.TRADER_ID
    LEFT JOIN T_TRADER_CUSTOMER CC ON CC.TRADER_ID = SA.TRADER_ID
    LEFT JOIN T_REGION R1 ON R1.region_id = TRA.AREA_ID
    LEFT JOIN T_REGION R2 ON R2.region_id = R1.PARENT_ID
    AND R2.REGION_ID > 100000
    LEFT JOIN T_REGION R3 ON R3.region_id = R2.PARENT_ID
    AND R1.REGION_ID > 100000
    LEFT JOIN T_SYS_OPTION_DEFINITION OOO ON OOO.SYS_OPTION_DEFINITION_ID = CC.CUSTOMER_LEVEL
    WHERE 1=1
    AND   A.LOG_TYPE = 1
    AND A.IS_ENABLE = 1
    AND A.ADD_TIME > #{startTime} AND A.ADD_TIME  &lt; #{endTime}
    AND A.NUM &lt; 0
    GROUP BY A.BARCODE_ID;
  </select>
  <select id="selectInAll" resultType="com.jxx.excel.InExport">
    SELECT
    (CASE A.OPERATE_TYPE
    WHEN 1 THEN
    C.BUYORDER_NO
    WHEN 3 THEN
    ASS.AFTER_SALES_NO
    WHEN 5 THEN
    ASS.AFTER_SALES_NO
    WHEN 8 THEN
    ASS.AFTER_SALES_NO
    WHEN 9 THEN
    IF(L.LEND_OUT_NO IS NOT NULL,L.LEND_OUT_NO,OO.order_no)
    WHEN 12 THEN
    IO.ORDER_NO
    WHEN 11 THEN
    IA.INVENTORY_ADJUSTMENT_NO
    ELSE ''
    END) AS '单号',
    CASE A.OPERATE_TYPE
    WHEN 1 THEN '采购入库'
    WHEN 2 THEN '销售出库'
    WHEN 3 THEN '销售换货入库'
    WHEN 4 THEN '销售换货出库'
    WHEN 5 THEN '销售退货入库'
    WHEN 6 THEN '采购退货出库'
    WHEN 7 THEN '采购换货出库'
    WHEN 8 THEN '采购换货入库'
    WHEN 9 THEN '外借入库'
    WHEN 10 THEN '外借出库'
    WHEN 11 THEN '调整盘盈入库'
    WHEN 12 THEN '盘盈入库'
    WHEN 13 THEN '报废出库'
    WHEN 14 THEN '领用出库'
    ELSE ''
    END  AS  '单据类型',
    CASE
    WHEN C.STATUS = 1 THEN
    '进行中'
    WHEN C.STATUS = 2 THEN
    '已完结'
    WHEN C.STATUS = 3 THEN
    '已关闭' ELSE '待确认'
    END '订单状态',

    CASE C.DELIVERY_DIRECT
    WHEN 1 THEN '是'
    WHEN 0 THEN '否'
    ELSE ''
    END AS '是否直发',
    FROM_UNIXTIME(
    IF
    (
    C.ADD_TIME = 0,
    NULL,
    C.ADD_TIME
    ) / 1000,
    '%Y-%m-%d'
    ) AS '创建时间',
    FROM_UNIXTIME(
    IF
    (
    C.VALID_TIME = 0,
    NULL,
    C.VALID_TIME
    ) / 1000,
    '%Y-%m-%d'
    ) AS '生效时间',

    CASE A.OPERATE_TYPE
    WHEN 1 THEN C.TRADER_NAME
    WHEN 9 THEN
    IF(L.TRADER_NAME IS NOT NULL,L.TRADER_NAME,OO.borrow_trader_name)
    ELSE '' END  '客户名称',
    C.TRADER_ID '客户ID',
    IF(TS.TRADER_TYPE = 1, '生产厂家','经销商') 客户类别,
    TSS.TITLE 客户等级,
    (
    SELECT
    F.ORG_NAME
    FROM
    T_R_USER_POSIT D
    LEFT JOIN T_POSITION E ON D.POSITION_ID = E.POSITION_ID
    LEFT JOIN T_ORGANIZATION F ON E.ORG_ID = F.ORG_ID
    WHERE
    D.USER_ID = ccc.USER_ID
    LIMIT 1
    ) AS '归属部门',
    CE.TITLE '发票类型',
    IFNULL(
    R3.REGION_NAME,
    IFNULL( R2.REGION_NAME, R1.REGION_NAME )) '客户归属省',
    AB.SHOW_NAME 商品名称,
    AB.SKU_NO SKU,
    BRA.BRAND_NAME 品牌,
    AB.MODEL '规格',
    UN.UNIT_NAME 计量单位,
    CB.BASE_CATEGORY_NAME '三级分类',
    DB.BASE_CATEGORY_NAME '二级分类',
    EB.BASE_CATEGORY_NAME  '一级分类',
    TC3.CATEGORY_NAME AS '老三级分类',
    TC2.CATEGORY_NAME AS '老二级分类',
    TC.CATEGORY_NAME AS '老一级分类',
    BR.BARCODE 贝登条码,
    A.BARCODE_FACTORY 厂商条码,
    ABS(A.NUM) 数量,
    A.NEW_COST_PRICE '单价',
    ABS(A.NUM) * A.NEW_COST_PRICE '入库金额',
    A.BATCH_NUMBER 批次,
    FROM_UNIXTIME( A.ADD_TIME / 1000, '%Y-%m-%d' ) AS '入库时间'
    FROM
    T_WAREHOUSE_GOODS_OPERATE_LOG A
    LEFT JOIN T_BUYORDER_GOODS B ON B.BUYORDER_GOODS_ID = A.RELATED_ID AND B.IS_DELETE = 0
    LEFT JOIN T_BUYORDER C ON B.BUYORDER_ID = C.BUYORDER_ID AND C.VALID_STATUS = 1 AND A.OPERATE_TYPE=1
    LEFT JOIN T_AFTER_SALES_GOODS ASG ON ASG.AFTER_SALES_GOODS_ID=A.RELATED_ID AND A.OPERATE_TYPE IN (3,5,8)
    LEFT JOIN T_AFTER_SALES ASS ON ASG.AFTER_SALES_ID=ASS.AFTER_SALES_ID
    LEFT JOIN T_TRADER T ON C.TRADER_ID=T.TRADER_ID
    LEFT JOIN T_WMS_OUTPUT_ORDER_GOODS OOG ON OOG.id=A.RELATED_ID AND A.OPERATE_TYPE = 9
    LEFT JOIN T_WMS_OUTPUT_ORDER OO ON OOG.wms_output_order_id=OO.id
    LEFT JOIN T_LEND_OUT L ON A.RELATED_ID = L.LEND_OUT_ID  AND A.OPERATE_TYPE = 9
    LEFT JOIN T_WMS_INPUT_ORDER_GOODS IOG ON IOG.WMS_INPUT_ORDER_GOODS_ID = A.RELATED_ID AND A.OPERATE_TYPE=12
    LEFT JOIN T_WMS_INPUT_ORDER IO ON IOG.WMS_INPUT_ORDER_ID=IO.WMS_INPUT_ORDER_ID
    LEFT JOIN T_WMS_INVENTORY_ADJUSTMENT_DETAIL IAD ON IAD.INVENTORY_ADJUSTMENT_DETAIL_ID = A.RELATED_ID AND A.OPERATE_TYPE = 11
    LEFT JOIN T_WMS_INVENTORY_ADJUSTMENT IA ON IA.INVENTORY_ADJUSTMENT_ID = IAD.INVENTORY_ADJUSTMENT_ID
    LEFT JOIN T_BARCODE BR ON BR.BARCODE_ID = A.BARCODE_ID
    LEFT JOIN V_CORE_SKU AB ON AB.SKU_ID = A.GOODS_ID
    LEFT JOIN V_CORE_SPU BB ON AB.SPU_ID = BB.SPU_ID
    LEFT JOIN V_BASE_CATEGORY CB ON BB.CATEGORY_ID = CB.BASE_CATEGORY_ID
    LEFT JOIN V_BASE_CATEGORY DB ON CB.PARENT_ID = DB.BASE_CATEGORY_ID
    LEFT JOIN V_BASE_CATEGORY EB ON DB.PARENT_ID = EB.BASE_CATEGORY_ID
    LEFT JOIN T_FIRST_ENGAGE FI ON BB.FIRST_ENGAGE_ID=FI.FIRST_ENGAGE_ID
    LEFT JOIN T_GOODS goods on goods.GOODS_ID=A.GOODS_ID
    LEFT JOIN T_CATEGORY TC ON TC.CATEGORY_ID=goods.CATEGORY_ID AND TC.STATUS=1
    LEFT JOIN T_CATEGORY TC2 ON TC2.CATEGORY_ID=TC.PARENT_ID AND TC2.STATUS=1
    LEFT JOIN T_CATEGORY TC3 ON TC3.CATEGORY_ID=TC2.CATEGORY_ID AND TC3.STATUS=1
    LEFT JOIN T_BRAND BRA ON BRA.BRAND_ID = BB.BRAND_ID
    LEFT JOIN T_UNIT UN ON UN.UNIT_ID=AB.BASE_UNIT_ID
    LEFT JOIN T_TRADER_SUPPLIER TS ON TS.TRADER_ID = C.TRADER_ID
    LEFT JOIN T_SYS_OPTION_DEFINITION TSS ON TS.GRADE= TSS.SYS_OPTION_DEFINITION_ID
    LEFT JOIN T_R_TRADER_J_USER bbb ON C.TRADER_ID = bbb.TRADER_ID
    LEFT JOIN T_USER ccc ON bbb.USER_ID = ccc.USER_ID
    LEFT JOIN T_SYS_OPTION_DEFINITION CE ON CE.SYS_OPTION_DEFINITION_ID = C.INVOICE_TYPE
    LEFT JOIN T_TRADER TRA ON TRA.TRADER_ID = C.TRADER_ID
    LEFT JOIN T_REGION R1 ON R1.region_id = TRA.AREA_ID
    LEFT JOIN T_REGION R2 ON R2.region_id = R1.parent_id
    AND R2.REGION_ID > 100000
    LEFT JOIN T_REGION R3 ON R3.region_id = R2.parent_id
    AND R1.REGION_ID > 100000
    WHERE
    A.LOG_TYPE = 0
    AND A.IS_ENABLE=1
    AND A.NUM > 0
    AND A.ADD_TIME > #{startTime} AND A.ADD_TIME  &lt; #{endTime}
    GROUP BY A.BARCODE_ID
  </select>
  <select id="getMaxId" resultType="java.lang.Integer">
    SELECT MAX(A.WAREHOUSE_GOODS_OPERATE_LOG_ID) FROM T_WAREHOUSE_GOODS_OPERATE_LOG A WHERE A.ADD_TIME  &lt;= #{endTime}
  </select>
  <select id="selectStockSnapshot" resultType="com.jxx.excel.StockExport">
    SELECT
    (CASE A.OPERATE_TYPE
    WHEN 1 THEN
    C.BUYORDER_NO
    WHEN 3 THEN
    ASS.AFTER_SALES_NO
    WHEN 5 THEN
    ASS.AFTER_SALES_NO
    WHEN 8 THEN
    ASS.AFTER_SALES_NO
    WHEN 9 THEN
    IF(L.LEND_OUT_NO IS NOT NULL,L.LEND_OUT_NO,OO.order_no)
    WHEN 11 THEN
    IA.INVENTORY_ADJUSTMENT_NO
    WHEN 12 THEN
    IO.ORDER_NO
    ELSE ''
    END) AS '入库单号',
    CASE A.OPERATE_TYPE
    WHEN 1 THEN '采购入库'
    WHEN 2 THEN '销售出库'
    WHEN 3 THEN '销售换货入库'
    WHEN 4 THEN '销售换货出库'
    WHEN 5 THEN '销售退货入库'
    WHEN 6 THEN '采购退货出库'
    WHEN 7 THEN '采购换货出库'
    WHEN 8 THEN '采购换货入库'
    WHEN 9 THEN '外借入库'
    WHEN 10 THEN '外借出库'
    WHEN 11 THEN '调整盘盈入库'
    WHEN 12 THEN '盘盈入库'
    WHEN 13 THEN '报废出库'
    WHEN 14 THEN '领用出库'
    ELSE ''
    END  AS  '单据类型',
    (CASE A.OPERATE_TYPE
    WHEN 1 THEN
    FROM_UNIXTIME(C.ADD_TIME/ 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 3 THEN
    FROM_UNIXTIME(ASS.ADD_TIME/ 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 5 THEN
    FROM_UNIXTIME(ASS.ADD_TIME/ 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 8 THEN
    FROM_UNIXTIME(ASS.ADD_TIME/ 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 9 THEN
    IF(L.LEND_OUT_NO IS NOT NULL,FROM_UNIXTIME(L.ADD_TIME/ 1000, '%Y-%m-%d %H:%i:%S'),OO.ADD_TIME)
    WHEN 11 THEN
    IA.ADD_TIME
    WHEN 12 THEN
    IO.ADD_TIME
    ELSE ''
    END) AS '创建日期',
    (CASE A.OPERATE_TYPE
    WHEN 1 THEN
    FROM_UNIXTIME(C.VALID_TIME / 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 3 THEN
    FROM_UNIXTIME(ASS.VALID_TIME / 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 5 THEN
    FROM_UNIXTIME(ASS.VALID_TIME / 1000, '%Y-%m-%d %H:%i:%S')
    WHEN 8 THEN
    FROM_UNIXTIME(ASS.VALID_TIME / 1000, '%Y-%m-%d %H:%i:%S')
    ELSE ''
    END )AS '生效日期',
    (CASE A.OPERATE_TYPE
    WHEN 1 THEN
    CU.USERNAME
    WHEN 3 THEN
    UASS.USERNAME
    WHEN 5 THEN
    UASS.USERNAME
    WHEN 8 THEN
    UASS.USERNAME
    WHEN 9 THEN
    IF(L.LEND_OUT_NO IS NOT NULL,UL.USERNAME,OO.creator)
    WHEN 11 THEN
    UIA.USERNAME
    WHEN 12 THEN
    UIO.USERNAME
    ELSE ''
    END) AS '创建人员',
    AB.SHOW_NAME 商品名称,
    AB.SKU_NO SKU,
    BRA.BRAND_NAME 品牌,
    AB.MODEL '规格',
    UN.UNIT_NAME 计量单位,
    SUM(A.ALLNUM)  库存数量,
    A.COST_PRICE 成本价,
    SUM(A.ALLNUM) * A.COST_PRICE 库存金额,
    A.NEW_COST_PRICE 成本价新,
    SUM(A.ALLNUM) * A.NEW_COST_PRICE 库存金额新,
    FROM_UNIXTIME( IF(A.EXPIRATION_DATE = 0, NULL , EXPIRATION_DATE) / 1000, '%Y-%m-%d %H:%i:%S' ) AS '效期',
    CB.BASE_CATEGORY_NAME '三级分类',
    DB.BASE_CATEGORY_NAME '二级分类',
    EB.BASE_CATEGORY_NAME  '一级分类',
    TC3.CATEGORY_NAME AS '老三级分类',
    TC2.CATEGORY_NAME AS '老二级分类',
    TC.CATEGORY_NAME AS '老一级分类'
    FROM (
    SELECT
    E.GOODS_ID,
    E.BARCODE_ID,
    E.RELATED_ID,
    E.OPERATE_TYPE,
    (
    IFNULL( SUM( E.NUM ), 0 ) - IFNULL( ABS( AA.OUTNUM ), 0 )
    ) ALLNUM ,
    E.COST_PRICE,
    E.NEW_COST_PRICE,
    E.EXPIRATION_DATE
    FROM
    T_WAREHOUSE_GOODS_OPERATE_LOG E
    LEFT JOIN (
    SELECT
    SUM( B.NUM ) AS OUTNUM,
    B.BARCODE_ID
    FROM
    T_WAREHOUSE_GOODS_OPERATE_LOG B
    WHERE
    B.OPERATE_TYPE IN ( 2, 4, 6, 7, 10 ,13,14 )
    AND B.IS_ENABLE = 1
    AND B.BARCODE_ID != 0
    AND B.WAREHOUSE_GOODS_OPERATE_LOG_ID &lt;= #{maxid}
    GROUP BY
    B.BARCODE_ID
    ) AS AA ON E.BARCODE_ID = AA.BARCODE_ID
    WHERE
    1 = 1
    AND E.OPERATE_TYPE IN ( 1, 3, 5, 8, 9 ,11 , 12)
    AND E.IS_ENABLE = 1
    AND E.GOODS_ID NOT IN ( SELECT COMMENTS FROM T_SYS_OPTION_DEFINITION WHERE PARENT_ID = 693 )
    AND E.COMPANY_ID = 1
    AND E.BARCODE_ID != 0
    AND E.WAREHOUSE_GOODS_OPERATE_LOG_ID &lt;= #{maxid}
    AND E.NUM > 0
    GROUP BY E.BARCODE_ID) A
    LEFT JOIN T_BUYORDER_GOODS B ON B.BUYORDER_GOODS_ID = A.RELATED_ID AND B.IS_DELETE = 0
    LEFT JOIN T_BUYORDER C ON B.BUYORDER_ID = C.BUYORDER_ID  AND A.OPERATE_TYPE=1
    LEFT JOIN T_USER CU ON CU.USER_ID=C.CREATOR
    LEFT JOIN T_AFTER_SALES_GOODS ASG ON ASG.AFTER_SALES_GOODS_ID=A.RELATED_ID AND A.OPERATE_TYPE IN (3,5,8)
    LEFT JOIN T_AFTER_SALES ASS ON ASG.AFTER_SALES_ID=ASS.AFTER_SALES_ID
    LEFT JOIN T_USER UASS ON UASS.USER_ID=ASS.CREATOR
    LEFT JOIN T_TRADER T ON C.TRADER_ID=T.TRADER_ID
    LEFT JOIN T_WMS_OUTPUT_ORDER_GOODS OOG ON OOG.id=A.RELATED_ID AND A.OPERATE_TYPE = 9
    LEFT JOIN T_WMS_OUTPUT_ORDER OO ON OOG.wms_output_order_id=OO.id
    LEFT JOIN T_LEND_OUT L ON A.RELATED_ID = L.LEND_OUT_ID  AND A.OPERATE_TYPE = 9
    LEFT JOIN T_USER UL ON L.CREATOR = UL.USER_ID
    LEFT JOIN T_WMS_INPUT_ORDER_GOODS IOG ON IOG.WMS_INPUT_ORDER_GOODS_ID = A.RELATED_ID AND A.OPERATE_TYPE=12
    LEFT JOIN T_WMS_INPUT_ORDER IO ON IOG.WMS_INPUT_ORDER_ID=IO.WMS_INPUT_ORDER_ID
    LEFT JOIN T_USER UIO ON UIO.USER_ID = IO.CREATOR
    LEFT JOIN T_WMS_INVENTORY_ADJUSTMENT_DETAIL IAD ON IAD.INVENTORY_ADJUSTMENT_DETAIL_ID = A.RELATED_ID AND A.OPERATE_TYPE = 11
    LEFT JOIN T_WMS_INVENTORY_ADJUSTMENT IA ON IA.INVENTORY_ADJUSTMENT_ID = IAD.INVENTORY_ADJUSTMENT_ID
    LEFT JOIN T_USER UIA ON UIA.USER_ID = IA.CREATOR
    LEFT JOIN V_CORE_SKU AB ON AB.SKU_ID = A.GOODS_ID
    LEFT JOIN V_CORE_SPU BB ON AB.SPU_ID = BB.SPU_ID
    LEFT JOIN V_BASE_CATEGORY CB ON BB.CATEGORY_ID = CB.BASE_CATEGORY_ID
    LEFT JOIN V_BASE_CATEGORY DB ON CB.PARENT_ID = DB.BASE_CATEGORY_ID
    LEFT JOIN V_BASE_CATEGORY EB ON DB.PARENT_ID = EB.BASE_CATEGORY_ID
    LEFT JOIN T_GOODS goods on goods.GOODS_ID=A.GOODS_ID
    LEFT JOIN T_CATEGORY TC ON TC.CATEGORY_ID=goods.CATEGORY_ID AND TC.STATUS=1
    LEFT JOIN T_CATEGORY TC2 ON TC2.CATEGORY_ID=TC.PARENT_ID AND TC2.STATUS=1
    LEFT JOIN T_CATEGORY TC3 ON TC3.CATEGORY_ID=TC2.CATEGORY_ID AND TC3.STATUS=1
    LEFT JOIN T_BRAND BRA ON BRA.BRAND_ID = BB.BRAND_ID
    LEFT JOIN T_UNIT UN ON UN.UNIT_ID=AB.BASE_UNIT_ID
    WHERE A.ALLNUM > 0
    GROUP BY A.EXPIRATION_DATE,A.OPERATE_TYPE,A.RELATED_ID;
  </select>


</mapper>